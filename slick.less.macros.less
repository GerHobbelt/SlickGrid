//!
// @license
// slickGrid v2.3.18-alpha.1011 (https://github.com/GerHobbelt/SlickGrid)
// Copyright 2009-2015 Michael Leibman <michael{dot}leibman{at}gmail{dot}com>
//
// Distributed under MIT license.
// All rights reserved.
///



//
// LESS mixins for slickgrid
//

.opacity(@opacity)
{
  opacity: @opacity;
  filter: ~`"alpha(opacity = " + @{opacity} * 100 + ")"`;
}


//
// Taken from
//   https://github.com/less/less.js/issues/1199
//   https://github.com/less/less.js/issues/36
// and reworked as an alternative answer to
//   http://stackoverflow.com/questions/18558368/is-there-a-generic-way-to-add-vendor-prefixes-in-less
//
@prefix-moz: true;
@prefix-opera: true;
@prefix-webkit: true;

.moz-prefix(@prop, @value) when (@prefix-moz)
{
  -moz-@{prop}: @value;
}
.opera-prefix(@prop, @value) when (@prefix-opera)
{
  -o-@{prop}: @value;
}
.webkit-prefix(@prop, @value) when (@prefix-webkit)
{
  -webkit-@{prop}: @value;
}
.prefixer(@prop, @value)
{
  .webkit-prefix(@prop, @value);
  .opera-prefix(@prop, @value);
  .moz-prefix(@prop, @value);
  @{prop}: @value;
}
// Usage example:
//   .box {
//     .prefixer(border-radius, 10px);
//   }





.transition(@value)
{
  .prefixer(transition, @value);
}

.text-overflow(@value)
{
  .opera-prefix(text-overflow, @value);
  text-overflow: @value;
}

// Ensure the addressed DOM elements render using the CSS box-model.
.box-model()
{
  // Note: when your userland CSS rules override these, you *MAY* get an exception thrown 
  // by SlickGrid at initialization time as SlickGrid requires this mode for all its 
  // DOM elements to ensure a correct render of the grid is produced at minimal cost.
  // 
  // We say *MAY* because the JS code doesn't check its entire internal tree thoroughly
  // for these settings as that's too much up-front cost for when your userland CSS/LESS
  // *may* happen to screw this up.
  .prefixer(box-sizing, border-box);
}
